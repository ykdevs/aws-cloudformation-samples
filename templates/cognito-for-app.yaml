#
# Cognitoの環境構築
#
AWSTemplateFormatVersion: '2010-09-09'
Description: >-
  Make Cognito Environment for App

Parameters:
  UserPoolName:
    Type: String
    Description: UserPoolName
    Default: SampleUserPool
  DomainName:
    Type: String
    Description: DomainName Prefix for UserPool (ex. https://${DomainName}.auth.ap-northeast-1.amazoncognito.com)
    Default: sample-demo
  ClientName:
    Type: String
    Description: ClientApplicationName
    Default: SampleClient
  IdPoolName:
    Type: String
    Description: IdPoolName
    Default: SampleIdPool

Resources:
  # Create UserPool
  SampleUserPool:
    Type: AWS::Cognito::UserPool
    Properties:
      UserPoolName: !Ref UserPoolName
      AutoVerifiedAttributes:
        - email
      UsernameAttributes:
        - email
      UsernameConfiguration:
        CaseSensitive: false
      AccountRecoverySetting:
        RecoveryMechanisms:
          - Priority: 1
            Name: verified_email
          - Priority: 2
            Name: verified_phone_number
      Schema:
        - Name: role
          AttributeDataType: String
          DeveloperOnlyAttribute: false
          Mutable: true
          Required: false
          StringAttributeConstraints:
            MinLength: 1
            MaxLength: 256

  # Create UserPoolDomain
  SampleUserPoolDomain:
    Type: AWS::Cognito::UserPoolDomain
    Properties:
      Domain: !Ref DomainName
      UserPoolId: !Ref SampleUserPool

  # Create UserPoolClient
  SampleUserPoolClient:
    Type: AWS::Cognito::UserPoolClient
    Properties:
      UserPoolId: !Ref SampleUserPool
      ClientName: !Ref ClientName
      RefreshTokenValidity: 30
      AccessTokenValidity: 60
      IdTokenValidity: 60
      TokenValidityUnits:
        AccessToken: minutes
        IdToken: minutes
        RefreshToken: days
      ReadAttributes:
        - "address"
        - "birthdate"
        - "custom:role"
        - "email"
        - "email_verified"
        - "family_name"
        - "gender"
        - "given_name"
        - "locale"
        - "middle_name"
        - "name"
        - "nickname"
        - "phone_number"
        - "phone_number_verified"
        - "picture"
        - "preferred_username"
        - "profile"
        - "updated_at"
        - "website"
        - "zoneinfo"
      WriteAttributes:
        - "address"
        - "birthdate"
        - "custom:role"
        - "email"
        - "family_name"
        - "gender"
        - "given_name"
        - "locale"
        - "middle_name"
        - "name"
        - "nickname"
        - "phone_number"
        - "picture"
        - "preferred_username"
        - "profile"
        - "updated_at"
        - "website"
        - "zoneinfo"
      ExplicitAuthFlows:
        - "ALLOW_REFRESH_TOKEN_AUTH"
        - "ALLOW_USER_SRP_AUTH"
      PreventUserExistenceErrors: "ENABLED"
      SupportedIdentityProviders:
        - "COGNITO"
      CallbackURLs:
        - "http://localhost:8080/callback"
      LogoutURLs:
        - "http://localhost:8080/logout"
      AllowedOAuthFlows:
        - "code"
      AllowedOAuthScopes:
        - "aws.cognito.signin.user.admin"
        - "email"
        - "openid"
        - "phone"
        - "profile"
      AllowedOAuthFlowsUserPoolClient: true

  # Create IdPool
  SampleIdPool:
    Type: AWS::Cognito::IdentityPool
    Properties:
      IdentityPoolName: !Ref IdPoolName
      CognitoIdentityProviders:
        - ProviderName: !Sub "cognito-idp.${AWS::Region}.amazonaws.com/${SampleUserPool}"
          ClientId: !Ref SampleUserPoolClient
          ServerSideTokenCheck: false
      AllowClassicFlow: false
      AllowUnauthenticatedIdentities: false

  # Create Auth IAM:Role
  SampleAuthRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Effect: Allow
            Action:
              - "sts:AssumeRoleWithWebIdentity"
            Principal:
              Federated: "cognito-identity.amazonaws.com"
            Condition:
              StringEquals:
                "cognito-identity.amazonaws.com:aud": !Ref SampleIdPool
              "ForAnyValue:StringLike":
                "cognito-identity.amazonaws.com:amr": "authenticated"
        Version: 2012-10-17

  # Make IAM Policy
  SampleAuthRolePolicy:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Effect: Allow
            Action:
              - "mobileanalytics:PutEvents"
              - "cognito-sync:*"
              - "cognito-identity:*"
            Resource: "*"
        Version: 2012-10-17
      PolicyName: !Sub "${AWS::StackName}-SampleAuthRolePolicy"
      Roles:
        - !Ref SampleAuthRole

  # Create UnAuth IAM:Role
  SampleUnAuthRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Effect: Allow
            Action:
             - "sts:AssumeRoleWithWebIdentity"
            Principal:
              Federated: "cognito-identity.amazonaws.com"
            Condition:
              StringEquals:
                "cognito-identity.amazonaws.com:aud": !Ref SampleIdPool
              "ForAnyValue:StringLike":
                "cognito-identity.amazonaws.com:amr": "unauthenticated"
        Version: 2012-10-17

  SampleUnAuthRolePolicy:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Effect: Allow
            Action:
              - "mobileanalytics:PutEvents"
              - "cognito-sync:*"
            Resource: "*"
        Version: 2012-10-17
      PolicyName: !Sub "${AWS::StackName}-SampleUnAuthRolePolicy"
      Roles:
        - !Ref SampleUnAuthRole

  # RoleAttachment for IdPool
  SampleIdPoolRoleAttachment:
    Type: AWS::Cognito::IdentityPoolRoleAttachment
    Properties:
      IdentityPoolId: !Ref SampleIdPool
      Roles:
        "authenticated": !GetAtt SampleAuthRole.Arn
        "unauthenticated": !GetAtt SampleUnAuthRole.Arn

# Outputs
Outputs:
  SampleUserPoolId:
    Value: !Ref SampleUserPool
    Export:
      Name: !Sub "${AWS::StackName}-SampleUserPoolId"
  SampleUserPoolClientId:
    Value: !Ref SampleUserPoolClient
    Export:
      Name: !Sub "${AWS::StackName}-SampleUserPoolClientId"
  SampleIdPoolId:
    Value: !Ref SampleIdPool
    Export:
      Name: !Sub "${AWS::StackName}-SampleIdPoolId"
  SampleDomainName:
    Value: !Ref DomainName
    Export:
      Name: !Sub "${AWS::StackName}-SampleDomainName"
